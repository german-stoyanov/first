{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/admin/users/users.component.css","webpack:///./src/app/components/admin/users/users.component.html","webpack:///./src/app/components/admin/users/users.component.ts","webpack:///./src/app/components/authentication/auth.module.ts","webpack:///./src/app/components/authentication/signin/signin.component.css","webpack:///./src/app/components/authentication/signin/signin.component.html","webpack:///./src/app/components/authentication/signin/signin.component.ts","webpack:///./src/app/components/authentication/signup/signup.component.css","webpack:///./src/app/components/authentication/signup/signup.component.html","webpack:///./src/app/components/authentication/signup/signup.component.ts","webpack:///./src/app/components/brokers/broker-details/broker-details.component.css","webpack:///./src/app/components/brokers/broker-details/broker-details.component.html","webpack:///./src/app/components/brokers/broker-details/broker-details.component.ts","webpack:///./src/app/components/brokers/broker-routing.ts","webpack:///./src/app/components/brokers/broker-single/broker-single.component.css","webpack:///./src/app/components/brokers/broker-single/broker-single.component.html","webpack:///./src/app/components/brokers/broker-single/broker-single.component.ts","webpack:///./src/app/components/brokers/broker.module.ts","webpack:///./src/app/components/brokers/brokers-all/brokers-all.component.css","webpack:///./src/app/components/brokers/brokers-all/brokers-all.component.html","webpack:///./src/app/components/brokers/brokers-all/brokers-all.component.ts","webpack:///./src/app/components/brokers/brokers-create/brokers-create.component.css","webpack:///./src/app/components/brokers/brokers-create/brokers-create.component.html","webpack:///./src/app/components/brokers/brokers-create/brokers-create.component.ts","webpack:///./src/app/components/flats/flat-single/flat-single.component.css","webpack:///./src/app/components/flats/flat-single/flat-single.component.html","webpack:///./src/app/components/flats/flat-single/flat-single.component.ts","webpack:///./src/app/components/flats/flats-all/flats-all.component.css","webpack:///./src/app/components/flats/flats-all/flats-all.component.html","webpack:///./src/app/components/flats/flats-all/flats-all.component.ts","webpack:///./src/app/components/flats/flats-create/flats-create.component.css","webpack:///./src/app/components/flats/flats-create/flats-create.component.html","webpack:///./src/app/components/flats/flats-create/flats-create.component.ts","webpack:///./src/app/components/flats/flats-details/flats-details.component.css","webpack:///./src/app/components/flats/flats-details/flats-details.component.html","webpack:///./src/app/components/flats/flats-details/flats-details.component.ts","webpack:///./src/app/components/flats/flats-edit/flats-edit.component.css","webpack:///./src/app/components/flats/flats-edit/flats-edit.component.html","webpack:///./src/app/components/flats/flats-edit/flats-edit.component.ts","webpack:///./src/app/components/flats/flats.module.ts","webpack:///./src/app/components/flats/flats.routing.ts","webpack:///./src/app/components/shared/footer/footer.component.css","webpack:///./src/app/components/shared/footer/footer.component.html","webpack:///./src/app/components/shared/footer/footer.component.ts","webpack:///./src/app/components/shared/navigation/navigation.component.css","webpack:///./src/app/components/shared/navigation/navigation.component.html","webpack:///./src/app/components/shared/navigation/navigation.component.ts","webpack:///./src/app/core/directives/highlight.directive.ts","webpack:///./src/app/core/guards/admin.guard.ts","webpack:///./src/app/core/guards/user-guard.guard.ts","webpack:///./src/app/core/interceptors/error.interceptor.ts","webpack:///./src/app/core/interceptors/jwt.interceptor.ts","webpack:///./src/app/core/interceptors/success.interceptor.ts","webpack:///./src/app/core/models/BrokerModel.ts","webpack:///./src/app/core/pipes/yesorno.pipe.ts","webpack:///./src/app/core/services/auth-service.ts","webpack:///./src/app/core/services/broker-service.ts","webpack:///./src/app/core/services/flat-service.ts","webpack:///./src/app/core/services/user-service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"div{\\r\\n   min-height: 630px;\\r\\n}\"","module.exports = \"<app-navigation></app-navigation>\\n<div>\\n<router-outlet></router-outlet> \\n</div> \\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './components/shared/navigation/navigation.component';\n\n\nimport { AppRoutingModule } from './app.routing';\n\nimport { AuthService } from './core/services/auth-service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { JwtInterceptor } from 'src/app/core/interceptors/jwt.interceptor';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ErrorInterceptor } from 'src/app/core/interceptors/error.interceptor';\nimport { SuccessInterceptor } from './core/interceptors/success.interceptor';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { YesornoPipe } from './core/pipes/yesorno.pipe';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\n\nimport { UsersComponent } from './components/admin/users/users.component';\nimport { UserService } from './core/services/user-service';\nimport { FormsModule } from '@angular/forms';\nimport { AuthModule } from './components/authentication/auth.module';\nimport { FooterComponent } from './components/shared/footer/footer.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    UsersComponent,\n    FooterComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    AuthModule\n  ],\n  providers: [\n    AuthService,\n    UserService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true\n    },{\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },{\n      provide: HTTP_INTERCEPTORS,\n      useClass: SuccessInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n\n\n\n\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { SigninComponent } from './components/authentication/signin/signin.component';\r\nimport { SignupComponent } from './components/authentication/signup/signup.component';\r\nimport { FlatsAllComponent } from './components/flats/flats-all/flats-all.component';\r\nimport { FlatsCreateComponent } from './components/flats/flats-create/flats-create.component';\r\nimport { FlatsEditComponent } from './components/flats/flats-edit/flats-edit.component';\r\nimport { FlatsDetailsComponent } from './components/flats/flats-details/flats-details.component';\r\nimport { UsersComponent } from './components/admin/users/users.component';\r\nimport { BrokersCreateComponent } from './components/brokers/brokers-create/brokers-create.component';\r\nimport { BrokersAllComponent } from './components/brokers/brokers-all/brokers-all.component';\r\nimport { BrokerDetailsComponent } from './components/brokers/broker-details/broker-details.component';\r\nimport { FlatModule } from './components/flats/flats.module';\r\nimport { BrokerModule } from './components/brokers/broker.module';\r\nimport { AdminGuard } from './core/guards/admin.guard';\r\n\r\n\r\n\r\nconst routes : Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: '/signin' },\r\n  { path: 'home', redirectTo: 'flats/sale/all' },\r\n  { path: 'signin', component:  SigninComponent },\r\n  { path: 'signup', component: SignupComponent },\r\n  { path: 'flats', loadChildren: ()=>FlatModule },\r\n  { path: 'brokers', loadChildren: ()=>BrokerModule },\r\n  { path: 'users', canActivate: [AdminGuard],component: UsersComponent },\r\n]\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {  }","module.exports = \"div {\\r\\n    text-align: center;\\r\\n    \\r\\n}\\r\\nimg {\\r\\n    border: 3px solid pink;\\r\\n    border-radius: 5px;\\r\\n    width: 100%;\\r\\n}\\r\\n.col-md-6 {\\r\\n    position: absolute;\\r\\n    top: 70px;\\r\\n    left: 300px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"col-md-6\\\">\\n  <h1>All Users</h1>\\n  <ul class=\\\"list-group\\\" *ngIf=\\\"users\\\">\\n    <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\" [@list1] *ngFor=\\\"let user of users\\\">\\n      {{user.username}}\\n      <span>Member since {{user._kmd.ect | date}}</span>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeUser(user._id)\\\">Ban</button>\\n    </li>\\n    <h5 *ngIf=\\\"users.length===0\\\">There are currently no users</h5>\\n  </ul>\\n  \\n</div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../core/services/user-service';\nimport { trigger, transition, style, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n  animations: [\n    trigger('list1',[\n      transition('void => *',[style({\n        opacity: 0,\n        transform: 'translateX(-100px)'\n      }),animate(600)]),\n      transition('* => void',[animate(600,style({\n        transform: 'translateX(100px)',\n        opacity:0\n      }))])\n    ])\n  ]\n})\nexport class UsersComponent implements OnInit {\n  users\n  constructor(private service: UserService) { }\n\n  removeUser(id){\n    let itemToDelete = this.users.filter(x=>x._id===id)[0]\n    let index = this.users.indexOf(itemToDelete)\n    this.users.splice(index,1);\n    this.service.remove(id).subscribe()\n  }\n\n  ngOnInit() {\n   this.service.getAll().subscribe((data: Array<Object>)=>this.users=data.filter(x=>x['username']!=='admin'))\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthService } from '../../core/services/auth-service';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SigninComponent,\r\n    SignupComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n    \r\n  ],\r\n  providers: [\r\n    AuthService\r\n  ]\r\n})\r\nexport class AuthModule { }","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Sign In</h1>\\n  <form (ngSubmit)=\\\"signIn(loginForm.value)\\\" #loginForm=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Username</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"username\\\" ngModel #username=\\\"ngModel\\\" pattern=\\\"^[A-Za-z]{4,}$\\\" required>\\n\\n      <div [hidden]=\\\"username.valid || username.pristine\\\" class=\\\"alert alert-dark\\\">\\n        Username must contain only letters and be at least 4 symbols \\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" ngModel minlength=\\\"4\\\" #password=\\\"ngModel\\\" required>\\n\\n      <div [hidden]=\\\"password.valid || password.pristine\\\" class=\\\"alert alert-dark\\\">\\n        Password must be at least 4 symbols\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-dark\\\" >Sign In</button>\\n  </form>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth-service';\nimport { SignInModel } from '../../../core/models/SignInModel';\n\n\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  constructor(private service: AuthService) { }\n\n  signIn(data: SignInModel){\n   this.service.login(data).subscribe()\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Sign Up</h1>\\n  <form (ngSubmit)=\\\"signUp(registerForm.value)\\\" #registerForm=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" \\n         name=\\\"username\\\" ngModel #username=\\\"ngModel\\\" pattern=\\\"^[A-Za-z]{4,}$\\\" required>\\n\\n         <div [hidden]=\\\"username.valid || username.pristine\\\" class=\\\"alert alert-dark\\\">\\n          Username must contain only letters and be at least 4 symbols \\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" \\n      name=\\\"email\\\" ngModel email required #email=\\\"ngModel\\\">\\n      <div [hidden]=\\\"email.valid || email.pristine\\\" class=\\\"alert alert-dark\\\">\\n        Please provide valid email\\n      </div>\\n      \\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" \\n     name=\\\"password\\\" ngModel minlength=\\\"4\\\" #password=\\\"ngModel\\\" required>\\n\\n     <div [hidden]=\\\"password.valid || password.pristine\\\" class=\\\"alert alert-dark\\\">\\n      Password must be at least 4 symbols\\n    </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Confirm password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordC\\\" \\n     name=\\\"Cpassword\\\" ngModel #cpass=\\\"ngModel\\\">\\n\\n     <div [hidden]=\\\"password.value===cpass.value || cpass.pristine\\\" class=\\\"alert alert-dark\\\">\\n      Password must match\\n     </div>\\n    </div>\\n    <button type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\" class=\\\"btn btn-dark\\\">Sign Up</button>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth-service';\nimport { SignUpModel } from '../../../core/models/SignUpModel';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private service: AuthService) { }\n\n  signUp(data: SignUpModel){\n    delete data['Cpassword']\n    this.service.register(data).subscribe()\n  }\n  \n  ngOnInit() {\n  }\n\n}\n","module.exports = \"img{\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"broker && flats\\\">\\n    <div class=\\\"row space-top\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <h1>Broker Details</h1>\\n        </div>\\n    </div>\\n    <div class=\\\"row space-top\\\">\\n        <div class=\\\"col-md-4\\\">\\n            <div class=\\\"card text-white bg-primary\\\">\\n                <div class=\\\"card-body\\\">\\n                    <blockquote class=\\\"card-blockquote\\\">\\n                        <img src=\\\"{{broker.imageUrl}}\\\" />\\n                    </blockquote>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n            <p>Name: {{broker.name}}</p>\\n            <p>Age: {{broker.age}}</p>\\n            <p>Description: {{broker.description}}</p>\\n            <h5>Offers</h5>\\n            <a *ngFor=\\\"let flat of flats; let i = index\\\" href=\\\"/flats/details/{{flat._id}}\\\">Offer {{i+1}} <br /></a>\\n        </div>\\n    </div>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { BrokerService } from '../../../core/services/broker-service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FlatService } from '../../../core/services/flat-service';\nimport { FlatModel } from '../../../core/models/FlatModel';\nimport { BrokerModel } from '../../../core/models/BrokerModel';\n\n@Component({\n  selector: 'app-broker-details',\n  templateUrl: './broker-details.component.html',\n  styleUrls: ['./broker-details.component.css']\n})\nexport class BrokerDetailsComponent implements OnInit {\n  broker: BrokerModel\n  flats: FlatModel[]\n  id: string\n\n  constructor(private brokerService: BrokerService,private route: ActivatedRoute, private flatService: FlatService) {\n    this.id = this.route.snapshot.params['id']\n  }\n\n  ngOnInit() {\n    this.brokerService.getById(this.id).subscribe(data=>this.broker=data)\n    this.flatService.getAll().subscribe((data)=>this.flats=data.filter(x=>x['broker']===this.id))\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BrokersCreateComponent } from './brokers-create/brokers-create.component';\r\nimport { BrokersAllComponent } from './brokers-all/brokers-all.component';\r\nimport { BrokerDetailsComponent } from './broker-details/broker-details.component';\r\nimport { AdminGuard } from '../../core/guards/admin.guard';\r\nimport { UserGuardGuard } from '../../core/guards/user-guard.guard';\r\n\r\nconst routes : Routes = [\r\n    {path: 'create', canActivate: [AdminGuard],component: BrokersCreateComponent},\r\n    {path: 'all',component: BrokersAllComponent},\r\n    {path: 'details/:id',component: BrokerDetailsComponent}\r\n]\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class BrokerRoutingModule {  }","module.exports = \"img{\\r\\n    border: 3px solid pink;\\r\\n    border-radius: 5px;\\r\\n    width: 100%;\\r\\n}\\r\\ndiv .col-md-5{\\r\\n    display: inline-block;\\r\\n    \\r\\n}\"","module.exports = \"<div class=\\\"primary\\\" *ngIf=\\\"data\\\">\\n    <div class=\\\"card text-white bg-primary\\\">\\n        <div class=\\\"card-body\\\">\\n            <blockquote class=\\\"card-blockquote\\\">\\n              <div class=\\\"col-md-5\\\">\\n                <img src=\\\"{{data.imageUrl}}\\\" />\\n              </div>\\n              <div class=\\\"col-md-5\\\">\\n                Descripton - {{data.description}}\\n                <br />\\n                Age - {{data.age}}\\n              </div>\\n              <p>{{data.name}}</p>\\n              <div class=\\\"pull-right\\\">\\n                    <a routerLink=\\\"/brokers/details/{{data._id}}\\\" class=\\\"btn btn-info\\\">Details</a>\\n              </div>\\n            </blockquote>\\n        </div>\\n    </div>\\n  </div>\\n  \"","import { Component, OnInit, Input } from '@angular/core';\nimport { BrokerModel } from '../../../core/models/BrokerModel';\n\n@Component({\n  selector: 'app-broker-single',\n  templateUrl: './broker-single.component.html',\n  styleUrls: ['./broker-single.component.css']\n})\nexport class BrokerSingleComponent implements OnInit {\n  @Input('data') data: BrokerModel\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log('here')\n  }\n\n}\n","\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\n\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n\r\n\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\r\n\r\nimport { AppRoutingModule } from '../../app.routing';\r\n\r\nimport { FlatService } from '../../core/services/flat-service';\r\nimport { BrokerService } from '../../core/services/broker-service';\r\n\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { BrokersAllComponent } from './brokers-all/brokers-all.component';\r\nimport { BrokerDetailsComponent } from './broker-details/broker-details.component';\r\nimport { BrokerSingleComponent } from './broker-single/broker-single.component';\r\nimport { BrokersCreateComponent } from './brokers-create/brokers-create.component';\r\nimport { BrokerRoutingModule } from './broker-routing';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BrokersAllComponent,\r\n    BrokerDetailsComponent,\r\n    BrokerSingleComponent,\r\n    BrokersCreateComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    BrokerRoutingModule\r\n  ],\r\n  providers: [\r\n    FlatService,\r\n    BrokerService\r\n  ]\r\n})\r\nexport class BrokerModule { }","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row space-top\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <h1>Welcome to united real estates of Burgas</h1>\\n            \\n        </div>\\n    </div>\\n        <div class=\\\"row space-top\\\">\\n            \\n           <app-broker-single *ngFor=\\\"let broker of brokers\\\" [data]=\\\"broker\\\" class=\\\"col-md-10\\\" ></app-broker-single>\\n          \\n        </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BrokerService } from '../../../core/services/broker-service';\nimport { BrokerModel } from '../../../core/models/BrokerModel';\n\n@Component({\n  selector: 'app-brokers-all',\n  templateUrl: './brokers-all.component.html',\n  styleUrls: ['./brokers-all.component.css']\n})\nexport class BrokersAllComponent implements OnInit {\n  brokers: BrokerModel[]\n\n  constructor(private service: BrokerService) { }\n\n  ngOnInit() {\n    this.service.getAll().subscribe(data=>this.brokers=data)\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row space-top\\\">\\n      <div class=\\\"col-md-12\\\">\\n          <h1>Add New Broker</h1>\\n    \\n      </div>\\n  </div>\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"create(form.value)\\\">\\n      <div class=\\\"row space-top\\\">\\n          <div class=\\\"col-md-8\\\">\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"form-control-label\\\" >Name</label>\\n                  <input class=\\\"form-control\\\" ngModel name=\\\"name\\\" type=\\\"text\\\" required pattern=\\\"^[A-Z][A-Za-z\\\\s]{4,}$\\\" #name=\\\"ngModel\\\" />\\n                  <div [hidden]=\\\"name.valid || name.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Name must contain only letters and be at least 4 symbols \\n                  </div>\\n              </div>\\n              <div class=\\\"form-group has-success\\\">\\n                  <label class=\\\"form-control-label\\\" >Age</label>\\n                  <input class=\\\"form-control is-valid\\\"  ngModel name=\\\"age\\\" type=\\\"number\\\" required #age=\\\"ngModel\\\" >\\n                  <div [hidden]=\\\"age.valid || age.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Age is required\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group has-success\\\">\\n                  <label class=\\\"form-control-label\\\" >Image</label>\\n                  <input class=\\\"form-control is-valid\\\"  ngModel name=\\\"imageUrl\\\" type=\\\"text\\\" required #imageUrl=\\\"ngModel\\\">\\n                  <div [hidden]=\\\"age.valid || age.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Image is required\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"form-control-label\\\" for=\\\"new-description\\\">Description</label>\\n                  <input class=\\\"form-control\\\" ngModel name=\\\"description\\\" id=\\\"new-description\\\" #description=\\\"ngModel\\\" required minlength=\\\"5\\\" type=\\\"text\\\"  >\\n                  <div [hidden]=\\\"description.valid || description.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Description must be at least 5 symbols\\n                  </div>\\n                </div>\\n              <input type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary\\\" value=\\\"Create\\\" />\\n          </div>\\n      </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { BrokerService } from '../../../core/services/broker-service';\nimport { BrokerModel } from '../../../core/models/BrokerModel';\n\n@Component({\n  selector: 'app-brokers-create',\n  templateUrl: './brokers-create.component.html',\n  styleUrls: ['./brokers-create.component.css']\n})\nexport class BrokersCreateComponent implements OnInit {\n\n  constructor(private service: BrokerService) { }\n\n  create(body: BrokerModel){\n    this.service.create(body).subscribe()\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"img {\\r\\n    width: 100%;\\r\\n   \\r\\n}\\r\\nblockquote{\\r\\n    min-height: 350px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"primary\\\" *ngIf=\\\"data\\\">\\n  <div class=\\\"card text-white bg-primary\\\">\\n      <div class=\\\"card-body\\\">\\n          <blockquote class=\\\"card-blockquote\\\">\\n              <img src=\\\"{{data.imageUrl}}\\\" />\\n              <p>{{data.town}}-{{data.address}}</p>\\n              \\n              <footer>\\n                  <cite *ngIf=\\\"data.category==='rent'\\\" title=\\\"Source Title\\\">Price - {{data.price}} {{data.period}}</cite>\\n                  <cite *ngIf=\\\"data.category==='sale'\\\" title=\\\"Source Title\\\">Price - {{data.price}}</cite>\\n              </footer>\\n              <div class=\\\"pull-right\\\">\\n                  <a routerLink=\\\"/flats/details/{{data._id}}\\\" class=\\\"btn btn-info\\\">Details</a>\\n                  <a *ngIf=\\\"AuthService.isAdmin()\\\" routerLink=\\\"/flats/edit/{{data._id}}\\\" class=\\\"btn btn-danger\\\">Edit</a>\\n                  <a (click)=\\\"deleteItem(data._id)\\\" *ngIf=\\\"AuthService.isAdmin()\\\" class=\\\"btn btn-danger\\\">Delete</a>\\n                \\n              </div>\\n              \\n              <i *ngIf=\\\"!include && AuthService.isLogged()\\\" class=\\\"fa fa-star fa-2x\\\"  appHighlight aria-hidden=\\\"true\\\" (click)=\\\"addToFav(data._id)\\\" ></i>\\n              <i *ngIf=\\\"include && AuthService.isLogged()\\\" class=\\\"fa fa-star fa-2x text-warning\\\"  appHighlight aria-hidden=\\\"true\\\" (click)=\\\"addToFav(data._id)\\\" ></i>\\n          </blockquote>\\n      </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FlatService } from '../../../core/services/flat-service';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { AuthService } from '../../../core/services/auth-service';\n\n\n@Component({\n  selector: 'app-flat-single',\n  templateUrl: './flat-single.component.html',\n  styleUrls: ['./flat-single.component.css']\n})\nexport class FlatSingleComponent implements OnInit {\n  @Input('data') data: Object\n  @Output() onDelete = new EventEmitter<string>()\n  @Output() changeArray = new EventEmitter<Object>()\n \n  include\n\n  constructor(private service: FlatService, private router: Router, private AuthService: AuthService) {}\n\n  deleteItem(id){\n    this.service.delete(id).subscribe()\n    this.onDelete.emit(id)\n  }\n\n  addToFav(id){\n    let username = sessionStorage.getItem('username')\n    this.service.getById(id).subscribe(data=>{\n      if(data['users'].includes(username)){\n        let index = data['users'].indexOf(username)\n        data['users'].splice(index,1)\n        data['removal'] = true\n        this.include = false\n        if(this.router.url.indexOf('mine')!==-1){\n          this.onDelete.emit(id)\n        }\n        this.changeArray.emit(data)\n      }else{\n        data['removal'] = false\n        data['users'].push(username)\n        this.include = true;\n        this.changeArray.emit(data)\n      }\n      this.service.edit(id,data).subscribe()\n    })\n  }\n\n  ngOnInit() {\n    console.log('ban ban')\n    this.include = this.data['users'].includes(sessionStorage.getItem('username'))\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row space-top\\\">\\n      <div class=\\\"col-md-12\\\">\\n          <h1>Welcome to united real estates of Burgas</h1>\\n          <p>Select flat from the catalog to view details.</p>\\n      </div>\\n  </div>\\n      <div class=\\\"row space-top\\\">\\n          \\n         <app-flat-single *ngFor=\\\"let flat of flats\\\" [@list1] [data]=\\\"flat\\\"  (onDelete)=\\\"delete($event)\\\" (changeArray)=\\\"changeArray($event)\\\" class=\\\"col-md-4\\\" ></app-flat-single>\\n        \\n      </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FlatService } from '../../../core/services/flat-service';\nimport { trigger, transition, animate, style } from '@angular/animations';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { FlatModel } from '../../../core/models/FlatModel';\n\n@Component({\n  selector: 'app-flats-all',\n  templateUrl: './flats-all.component.html',\n  styleUrls: ['./flats-all.component.css'],\n  animations: [\n    trigger('list1',[\n      transition('void => *',[style({\n        opacity: 0,\n        transform: 'translateX(-100px)'\n      }),animate(600)]),\n      transition('* => void',[animate(600,style({\n        transform: 'translateY(-100px)',\n        opacity:0\n      }))])\n    ])\n  ]\n})\nexport class FlatsAllComponent implements OnInit {\n  allFlats: FlatModel[]\n  flats: FlatModel[]\n  category: string\n  type: string\n  constructor(private service: FlatService, private router: Router, private route: ActivatedRoute) { \n    router.events.subscribe((val) =>{ \n      if(val instanceof NavigationEnd){\n        this.category = route.snapshot.params['category']\n        this.type = route.snapshot.params['type']\n        \n        if(this.allFlats){\n          this.reArangeFlats()\n        }\n        \n      }\n    })\n    this.delete = this.delete.bind(this)\n    \n    this.changeArray = this.changeArray.bind(this)\n  }\n\n  delete(id){\n    let itemToDelete = this.flats.filter(x=>x._id===id)[0]\n    let index = this.flats.indexOf(itemToDelete)\n    this.flats.splice(index,1)\n\n    if(this.router.url.indexOf('mine')===-1){\n      let othIndex = this.allFlats.indexOf(itemToDelete)\n      this.allFlats.splice(index,1)\n    }\n    \n  }\n\n  reArangeFlats(){\n    if(this.allFlats){\n      if(this.router.url.indexOf('mine')!==-1){\n        this.flats = this.allFlats.filter(x=>x['users'].includes(sessionStorage.getItem('username')))\n      } else{\n        this.flats = this.allFlats.filter(x=>x['category']===this.category)\n      }\n    } \n  }\n\n  changeArray(data){\n    let obj = this.allFlats\n    let el = obj.filter(x=>x._id===data._id)[0]\n    let index = obj.indexOf(el)\n    obj[index] = data\n    this.allFlats = obj\n  }\n\n  ngOnInit() {\n    this.service.getAll().subscribe(data=>{\n      this.allFlats = data\n      this.reArangeFlats()\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div class=\\\"row space-top\\\">\\n      <div class=\\\"col-md-12\\\">\\n          <h1>Create New Flat addvertisment</h1>\\n      </div>\\n  </div>\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"create(form.value)\\\">\\n      <div class=\\\"row space-top\\\">\\n          \\n          <div class=\\\"col-md-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"form-control-label\\\" for=\\\"new-material\\\">Category</label>\\n              <select name=\\\"\\\" id=\\\"\\\" ngModel name=\\\"category\\\" #category=\\\"ngModel\\\" required>\\n                <option value=\\\"rent\\\">rent</option>\\n                <option value=\\\"sale\\\">sale</option>\\n              </select>\\n              <div [hidden]=\\\"category.valid || category.pristine\\\" class=\\\"alert alert-dark\\\">\\n                Please select category\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                  <label class=\\\"form-control-label\\\" >Town</label>\\n                  <input class=\\\"form-control\\\" ngModel name=\\\"town\\\" #town=\\\"ngModel\\\" type=\\\"text\\\" pattern=\\\"^[A-Z][A-Za-z\\\\s]{4,}$\\\">\\n                  <div [hidden]=\\\"town.valid || town.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Town must contain only letters and be at least 4 symbols \\n                  </div>\\n            </div>\\n            <div class=\\\"form-group has-success\\\">\\n                  <label class=\\\"form-control-label\\\" >Address</label>\\n                  <input class=\\\"form-control is-valid\\\"  ngModel name=\\\"address\\\" type=\\\"text\\\" #address=\\\"ngModel\\\" required minlength=\\\"5\\\">\\n                  <div [hidden]=\\\"address.valid || address.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Address must be at least 5 symbols \\n                  </div>\\n            </div>\\n            <div class=\\\"form-group has-danger\\\">\\n                  <label class=\\\"form-control-label\\\" for=\\\"new-year\\\">Price</label>\\n                  <input class=\\\"form-control is-valid\\\" name=\\\"price\\\" ngModel id=\\\"new-year\\\" type=\\\"number\\\" #price=\\\"ngModel\\\" required>\\n                  <div [hidden]=\\\"price.valid || price.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Price is required\\n                  </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                  <label class=\\\"form-control-label\\\" for=\\\"new-description\\\">Description</label>\\n                  <input class=\\\"form-control\\\" ngModel name=\\\"description\\\" id=\\\"new-description\\\" type=\\\"text\\\" #description=\\\"ngModel\\\" minlength=\\\"8\\\">\\n                  <div [hidden]=\\\"description.valid || description.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Description must be at least 8 symbols\\n                  </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"form-control-label\\\" for=\\\"new-price\\\">Size</label>\\n                  <input class=\\\"form-control\\\" ngModel name=\\\"size\\\" id=\\\"new-price\\\" type=\\\"number\\\" #size=\\\"ngModel\\\" required>\\n                  <div [hidden]=\\\"size.valid || size.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Size is required\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"form-control-label\\\" for=\\\"new-image\\\">ImageUrl</label>\\n                  <input class=\\\"form-control\\\" ngModel name=\\\"imageUrl\\\" id=\\\"new-image\\\" type=\\\"text\\\" #imageUrl=\\\"ngModel\\\" required>\\n                  <div [hidden]=\\\"imageUrl.valid || imageUrl.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Image is required\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group\\\" >\\n                    <label class=\\\"form-control-label\\\" for=\\\"new-material\\\">Broker</label>\\n                    <select  name=\\\"\\\" id=\\\"\\\" ngModel name=\\\"broker\\\" #broker=\\\"ngModel\\\" required>\\n                      <option *ngFor=\\\"let broker of brokers\\\" [value]=\\\"broker._id\\\">{{broker.name}}</option>\\n                    </select>\\n                    <div [hidden]=\\\"broker.valid || broker.pristine\\\" class=\\\"alert alert-dark\\\">\\n                        Broker is required\\n                    </div>\\n              </div>\\n              <div class=\\\"form-group\\\" *ngIf=\\\"category.value=='rent'\\\">\\n                  <label class=\\\"form-control-label\\\" for=\\\"new-material\\\">Period for paying</label>\\n                  <select name=\\\"\\\" id=\\\"\\\" ngModel name=\\\"period\\\" #period=\\\"ngModel\\\" required>\\n                    <option value=\\\"per month\\\">per month</option>\\n                    <option value=\\\"per night\\\">per night</option>\\n                    <option value=\\\"per year\\\">per year</option>\\n                  </select>\\n                  <div [hidden]=\\\"period.valid || period.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Period is required\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"category.value=='sale'\\\">\\n                   <div class=\\\"form-group\\\">\\n                      <input type=\\\"checkbox\\\" name=\\\"brick\\\" ngModel value=\\\"Bike\\\"> Brick<br>\\n                   </div>\\n                   <div class=\\\"form-group\\\">\\n                    <input type=\\\"checkbox\\\" name=\\\"heating\\\" ngModel value=\\\"Bike\\\"> Local Heating<br>\\n                   </div>\\n                   <div class=\\\"form-group\\\">\\n                      <input type=\\\"checkbox\\\" name=\\\"elevator\\\" ngModel  value=\\\"Bike\\\"> Elevator<br>\\n                    </div>\\n                  </div>\\n              <input type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary\\\" value=\\\"Create\\\" />\\n          </div>\\n      </div>\\n  </form>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FlatService } from '../../../core/services/flat-service';\nimport { BrokerService } from '../../../core/services/broker-service';\nimport { FlatModel } from '../../../core/models/FlatModel';\n\n@Component({\n  selector: 'app-flats-create',\n  templateUrl: './flats-create.component.html',\n  styleUrls: ['./flats-create.component.css']\n})\nexport class FlatsCreateComponent implements OnInit {\n  brokers\n\n  constructor(private flatService: FlatService, private brokerService: BrokerService) { }\n\n  create(data: FlatModel){\n    data.users = []\n    this.flatService.create(data).subscribe()\n  }\n\n  ngOnInit() {\n    this.brokerService.getAll().subscribe(data=>this.brokers=data)\n  }\n\n}\n","module.exports = \"img{\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"flat | async as flat\\\">\\n    <div class=\\\"row space-top\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <h1>Flat Details</h1>\\n        </div>\\n    </div>\\n    <div class=\\\"row space-top\\\">\\n        <div class=\\\"col-md-4\\\">\\n            <div class=\\\"card text-white bg-primary\\\">\\n                <div class=\\\"card-body\\\">\\n                    <blockquote class=\\\"card-blockquote\\\">\\n                        <img src=\\\"{{flat.imageUrl}}\\\" />\\n                    </blockquote>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n            <p>For: {{flat.category}}</p>\\n            <p>Address: {{flat.town}} - {{flat.address}}</p>\\n            <p>Size: {{flat.size}}</p>\\n            <p>Description: {{flat.description}}</p>\\n            \\n            <p *ngIf=\\\"flat.category==='sale'\\\"> Price: {{flat.price}}</p>\\n            <p *ngIf=\\\"flat.category==='rent'\\\">Price: {{flat.price}} {{flat.period}}</p>\\n            <ul *ngIf=\\\"flat.category==='sale'\\\">\\n              <li>\\n                Brick - {{flat.brick | yesorno}}\\n              </li>\\n              <li>\\n                Elevator - {{flat.elevator | yesorno}}\\n              </li>\\n              <li>\\n                 Local Heating - {{flat.heating | yesorno}}\\n              </li>\\n            </ul>\\n            <a routerLink=\\\"/brokers/details/{{flat.broker}}\\\">Broker</a>\\n        </div>\\n    </div>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FlatService } from '../../../core/services/flat-service';\nimport { FlatModel } from '../../../core/models/FlatModel';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-flats-details',\n  templateUrl: './flats-details.component.html',\n  styleUrls: ['./flats-details.component.css']\n})\nexport class FlatsDetailsComponent implements OnInit {\n\n  flat: Observable<FlatModel>\n\n  constructor(private route: ActivatedRoute,private service: FlatService) { }\n\n  ngOnInit() {\n    let id = this.route.snapshot.params['id'];\n    this.flat = this.service.getById(id)\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div class=\\\"row space-top\\\">\\n      <div class=\\\"col-md-12\\\">\\n          <h1>Edit Flat addvertisment</h1>\\n    \\n      </div>\\n  </div>\\n  <form #form=\\\"ngForm\\\"  *ngIf=\\\"flat.category\\\" (ngSubmit)=\\\"edit()\\\" >\\n      <div class=\\\"row space-top\\\">\\n         \\n          <div class=\\\"col-md-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"form-control-label\\\" for=\\\"new-material\\\">Category</label>\\n              <select name=\\\"\\\" id=\\\"\\\" [(ngModel)]=\\\"flat.category\\\" name=\\\"category\\\" #category=\\\"ngModel\\\" required>\\n                <option value=\\\"rent\\\">rent</option>\\n                <option value=\\\"sale\\\">sale</option>\\n              </select>\\n              <div [hidden]=\\\"category.valid || category.pristine\\\" class=\\\"alert alert-dark\\\">\\n                Please select category\\n              </div>\\n            </div>\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"form-control-label\\\" >Town</label>\\n                  <input class=\\\"form-control\\\" [(ngModel)]=\\\"flat.town\\\" name=\\\"town\\\" type=\\\"text\\\" #town=\\\"ngModel\\\" pattern=\\\"^[A-Z][A-Za-z\\\\s]{4,}$\\\">\\n                  <div [hidden]=\\\"town.valid || town.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Town must contain only letters and be at least 4 symbols \\n                  </div>\\n              </div>\\n              <div class=\\\"form-group has-success\\\">\\n                  <label class=\\\"form-control-label\\\" >Address</label>\\n                  <input class=\\\"form-control is-valid\\\"  [(ngModel)]=\\\"flat.address\\\" name=\\\"address\\\" type=\\\"text\\\"  #address=\\\"ngModel\\\" required minlength=\\\"5\\\">\\n                 <div [hidden]=\\\"address.valid || address.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Address must be at least 5 symbols \\n                  </div>\\n              </div>\\n              <div class=\\\"form-group has-danger\\\">\\n                  <label class=\\\"form-control-label\\\" for=\\\"new-year\\\">Price</label>\\n                  <input class=\\\"form-control is-valid\\\" name=\\\"price\\\" [(ngModel)]=\\\"flat.price\\\" id=\\\"new-year\\\" type=\\\"number\\\" #price=\\\"ngModel\\\" required>\\n                  <div [hidden]=\\\"price.valid || price.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Price is required\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"form-control-label\\\" for=\\\"new-description\\\">Description</label>\\n                  <input class=\\\"form-control\\\" [(ngModel)]=\\\"flat.description\\\" name=\\\"description\\\" id=\\\"new-description\\\" type=\\\"text\\\" #description=\\\"ngModel\\\" minlength=\\\"8\\\">\\n                  <div [hidden]=\\\"description.valid || description.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Description must be at least 8 symbols\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"form-control-label\\\" for=\\\"new-price\\\">Size</label>\\n                  <input class=\\\"form-control\\\" [(ngModel)]=\\\"flat.size\\\" name=\\\"size\\\" id=\\\"new-price\\\" type=\\\"number\\\" #size=\\\"ngModel\\\" required >\\n                  <div [hidden]=\\\"size.valid || size.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Size is required\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"form-control-label\\\" for=\\\"new-image\\\">ImageUrl</label>\\n                  <input class=\\\"form-control\\\" [(ngModel)]=\\\"flat.imageUrl\\\" name=\\\"imageUrl\\\" id=\\\"new-image\\\" type=\\\"text\\\" #imageUrl=\\\"ngModel\\\" required>\\n                  <div [hidden]=\\\"imageUrl.valid || imageUrl.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Image is required\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group\\\" >\\n                    <label class=\\\"form-control-label\\\" for=\\\"new-material\\\">Broker</label>\\n                    <select  name=\\\"\\\" id=\\\"\\\" [(ngModel)]=\\\"flat.broker\\\" name=\\\"broker\\\" #broker=\\\"ngModel\\\" required>\\n                      <option *ngFor=\\\"let broker of brokers\\\" [value]=\\\"broker._id\\\">{{broker.name}}</option>\\n                    </select>\\n                    <div [hidden]=\\\"broker.valid || broker.pristine\\\" class=\\\"alert alert-dark\\\">\\n                        Broker is required\\n                    </div>\\n              </div>\\n              <div class=\\\"form-group\\\" *ngIf=\\\"category.value=='rent'\\\">\\n                  <label class=\\\"form-control-label\\\" for=\\\"new-material\\\">Period for paying</label>\\n                  <select name=\\\"\\\" id=\\\"\\\"  [(ngModel)]=\\\"flat.period\\\" name=\\\"period\\\" #period=\\\"ngModel\\\" required>\\n                    <option value=\\\"per month\\\">per month</option>\\n                    <option value=\\\"per night\\\">per night</option>\\n                    <option value=\\\"per year\\\">per year</option>\\n                  </select>\\n                  <div [hidden]=\\\"period.valid || period.pristine\\\" class=\\\"alert alert-dark\\\">\\n                    Period is required\\n                </div>\\n                </div>\\n              <div *ngIf=\\\"category.value=='sale'\\\">\\n                   <div class=\\\"form-group\\\">\\n                      <input type=\\\"checkbox\\\" name=\\\"brick\\\" [(ngModel)]=\\\"flat.brick\\\" > Brick<br>\\n                   </div>\\n                   <div class=\\\"form-group\\\">\\n                    <input type=\\\"checkbox\\\" name=\\\"heating\\\" [(ngModel)]=\\\"flat.heating\\\" > Local Heating<br>\\n                   </div>\\n                   <div class=\\\"form-group\\\">\\n                      <input type=\\\"checkbox\\\" name=\\\"elevator\\\" [(ngModel)]=\\\"flat.elevator\\\"  > Elevator<br>\\n                    </div>\\n                  </div>\\n              <input type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary\\\" value=\\\"Edit\\\" />\\n          </div>\\n      </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FlatService } from '../../../core/services/flat-service';\nimport { BrokerService } from '../../../core/services/broker-service';\nimport { FlatModel } from '../../../core/models/FlatModel';\n\n@Component({\n  selector: 'app-flats-edit',\n  templateUrl: './flats-edit.component.html',\n  styleUrls: ['./flats-edit.component.css']\n})\nexport class FlatsEditComponent implements OnInit {\n  flat: FlatModel\n  brokers\n  id: string\n\n  constructor(private route: ActivatedRoute, private flatService: FlatService, private brokerService: BrokerService) { \n    this.id = this.route.snapshot.params['id']\n  }\n\n  ngOnInit() {\n    this.flatService.getById(this.id).subscribe(data=>this.flat=data)\n    this.brokerService.getAll().subscribe(data=>this.brokers=data)\n  }\n\n  edit(){\n    this.flatService.edit(this.id,this.flat).subscribe()\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\r\nimport { FlatsRoutingModule } from './flats.routing';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FlatsAllComponent } from './flats-all/flats-all.component';\r\nimport { FlatsEditComponent } from './flats-edit/flats-edit.component';\r\nimport { FlatsDetailsComponent } from './flats-details/flats-details.component';\r\nimport { FlatsCreateComponent } from './flats-create/flats-create.component';\r\nimport { FlatSingleComponent } from './flat-single/flat-single.component';\r\n\r\nimport { FlatService } from '../../core/services/flat-service';\r\nimport { BrokerService } from '../../core/services/broker-service';\r\n\r\nimport { YesornoPipe } from '../../core/pipes/yesorno.pipe';\r\nimport { HighlightDirective } from '../../core/directives/highlight.directive';\r\nimport { AuthService } from '../../core/services/auth-service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FlatsAllComponent,\r\n    FlatsDetailsComponent,\r\n    FlatsEditComponent,\r\n    FlatSingleComponent,\r\n    FlatsCreateComponent,\r\n    YesornoPipe,\r\n    HighlightDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AngularFontAwesomeModule,\r\n    FlatsRoutingModule,\r\n  ],\r\n  providers: [\r\n    FlatService,\r\n    BrokerService,\r\n    AuthService\r\n  ]\r\n})\r\nexport class FlatModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FlatsDetailsComponent } from './flats-details/flats-details.component';\r\nimport { FlatsEditComponent } from './flats-edit/flats-edit.component';\r\nimport { FlatsAllComponent } from './flats-all/flats-all.component';\r\nimport { FlatsCreateComponent } from './flats-create/flats-create.component';\r\nimport { UserGuardGuard } from '../../core/guards/user-guard.guard';\r\nimport { AdminGuard } from '../../core/guards/admin.guard';\r\n\r\nconst routes : Routes = [\r\n    {path: 'details/:id',component: FlatsDetailsComponent},\r\n    {path: 'edit/:id', canActivate: [AdminGuard],component: FlatsEditComponent},\r\n    {path: ':category/:type',canActivate: [UserGuardGuard],component: FlatsAllComponent},\r\n    {path: 'create', canActivate: [AdminGuard],component: FlatsCreateComponent},\r\n]\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class FlatsRoutingModule {  }","module.exports = \"footer{\\r\\n    background-color: rgba(173, 76, 157, 0.979);\\r\\n    flex-shrink: 0;\\r\\n    text-align: center;\\r\\n}\\r\\nimg{\\r\\n    \\r\\n    width: 70px;\\r\\n}\"","module.exports = \"<footer class=\\\"col-md-12\\\">\\n  <img src=\\\"https://angular.io/assets/images/logos/angular/angular.svg\\\"/>\\n  \\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"a:hover {\\r\\n    background-color: pink;\\r\\n}\\r\\nspan {\\r\\n    float: right;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Flats</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"home\\\">Home <span class=\\\"sr-only\\\"></span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\" >\\n          <a class=\\\"nav-link\\\"  routerLink=\\\"/flats/sale/all\\\">For sale <span class=\\\"sr-only\\\"></span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\" >\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/flats/rent/all\\\">For rent <span class=\\\"sr-only\\\"></span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"service.isLogged()\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/flats/all/mine\\\">Favourites <span class=\\\"sr-only\\\"></span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"service.isAdmin()\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/users\\\">All Users</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"service.isAdmin()\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/flats/create\\\">Create Flat</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"service.isAdmin()\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/brokers/create\\\">Add Broker</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\"  routerLink=\\\"/brokers/all\\\">All Brokers</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!service.isLogged()\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/signin\\\">Login</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!service.isLogged()\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/signup\\\">Register</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"service.isLogged()\\\" (click)=\\\"logout()\\\">Logout</a>\\n      </li>\\n      <span class=\\\"nav-item\\\" *ngIf=\\\"service.isLogged()\\\">\\n        <i class=\\\"nav-link\\\">Hi {{service.getUsername()}}</i>\\n      </span>\\n    </ul>\\n    \\n   \\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth-service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n  \n  constructor(public service: AuthService) { }\n\n  logout(){\n    this.service.logout().subscribe()\n    \n  }\n\n  ngOnInit() {\n    \n  }\n\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n\n  constructor(private el: ElementRef) { \n    \n  }\n\n  private highlight(color: string) {   \n    this.el.nativeElement.style.backgroundColor = color; \n  }\n  \n  @HostListener('mouseenter') onMouseEnter() {\n    this.highlight('yellow');\n  }\n  @HostListener('mouseleave') onMouseLeave() {\n    this.highlight(null);\n  }\n  \n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { \n   CanActivate,\n   ActivatedRouteSnapshot,\n   RouterStateSnapshot, \n   Router\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private authService : AuthService,\n    private router : Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    \n    if (this.authService.isAdmin()) {\n      return true;\n    }  \n\n    this.router.navigate(['/signin']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { \n   CanActivate,\n   ActivatedRouteSnapshot,\n   RouterStateSnapshot, \n   Router\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth-service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuardGuard implements CanActivate {\n\n  constructor(private authService : AuthService,\n    private router : Router ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n      \n    \n    if (this.authService.isLogged()) {\n      return true;\n    } else if(state.url.indexOf('mine') === -1) {\n      return true;\n    }\n\n    this.router.navigate(['/signin']);\n    return false;\n  }\n}\n\n","import {\r\n    HttpResponse,\r\n    HttpEvent,\r\n    HttpHandler,\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n    HttpErrorResponse,\r\n    \r\n} from \"@angular/common/http\";\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\n\r\nimport { tap, catchError } from \"rxjs/operators\"\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private router: Router, private toastr: ToastrService){\r\n\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(\r\n        catchError((err: HttpErrorResponse) => {\r\n    \r\n              \r\n          this.toastr.error(err.error.description, 'Warning!');\r\n        \r\n\r\n          return throwError(err.error);\r\n        }));\r\n    }\r\n}","import {\r\n    HttpResponse,\r\n    HttpEvent,\r\n    HttpHandler,\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n    \r\n} from \"@angular/common/http\";\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { tap } from \"rxjs/operators\"\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\nconst appKey = 'kid_rk6IN3LUm'\r\nconst appSecret = 'e1d95d34d9294f1085042343ebda7dc9'\r\nconst masterSecret = '357a6a9d511b49509aa578acf39e1cb7'\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private router: Router, private toastr: ToastrService){\r\n\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        \r\n        if((request.url.endsWith('login')||request.url.endsWith(appKey)) && request.method === \"POST\") {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    'Authorization': `Basic ${btoa(appKey + ':' + appSecret)}`\r\n                }\r\n            })\r\n        } else if(((request.url.indexOf('user')!== -1 && request.method==='DELETE') || (this.router.url.indexOf('all')!==-1 || this.router.url.indexOf('details')!==-1)) && request.url.indexOf('_logout') === -1  ){\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    'Authorization': `Basic ${btoa(appKey + ':' + masterSecret)}`\r\n                }\r\n            })\r\n        } else if(sessionStorage.getItem('username')){\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    'Authorization': `Kinvey ${sessionStorage.getItem('authtoken')}`\r\n                }\r\n            })\r\n        }\r\n\r\n        return next.handle(request)\r\n            .pipe(tap((response: HttpEvent<any>)=>{\r\n               if(response instanceof HttpResponse && response['body']['_kmd']) {\r\n                   if(response['body']['_kmd']['authtoken']){\r\n                        sessionStorage.setItem('authtoken',response['body']['_kmd']['authtoken'])\r\n                        sessionStorage.setItem('username',response['body']['username'])\r\n                        sessionStorage.setItem('userId',response['body']['_id'])\r\n                    }\r\n                }\r\n                \r\n            }))\r\n\r\n    }\r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {\r\n  HttpResponse,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nconst appKey = 'kid_rk6IN3LUm'\r\nconst appSecret = 'e1d95d34d9294f1085042343ebda7dc9'\r\n\r\n@Injectable()\r\nexport class SuccessInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n   \r\n  ) { }\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request)\r\n      .pipe(\r\n        tap(\r\n          (event: HttpEvent<any>) => {\r\n            if (event instanceof HttpResponse && request.url.endsWith('login')) {\r\n              this.toastr.success('Login Successful!');\r\n              this.router.navigate(['/home']);\r\n            } else if (event instanceof HttpResponse && request.url.endsWith(appKey) && request.method===\"POST\") {\r\n              this.toastr.success('Register Successful!');\r\n              this.router.navigate(['/home']);\r\n            } else if(event instanceof HttpResponse && request.url.endsWith('flats') && request.method===\"POST\"){\r\n              this.toastr.success('Flat created successfully!');\r\n              this.router.navigate(['/home']);\r\n            } else if (event instanceof HttpResponse && request.method==='DELETE' && request.url.indexOf('user')=== -1){\r\n              this.toastr.success('item deleted successfully')\r\n            } else if(event instanceof HttpResponse && request.method===\"PUT\" && request.url.indexOf('flats')!== -1 && this.router.url.indexOf('all')===-1){\r\n              this.toastr.success('Add edited successfully')\r\n              this.router.navigate(['/home'])\r\n            } else if(event instanceof HttpResponse && request.method===\"PUT\" && request.url.indexOf('flats')!== -1 && !request.body['removal']){\r\n              this.toastr.success('Flat Added to favourites')\r\n            } else if(event instanceof HttpResponse && request.method===\"PUT\" && request.url.indexOf('flats')!== -1 && request.body['removal']){\r\n              this.toastr.success('Flat Removed from favourites')\r\n            } else if(event instanceof HttpResponse && request.url.endsWith('brokers') && request.method===\"POST\"){\r\n              this.toastr.success('Broker created successfully!');\r\n              this.router.navigate(['/brokers/all'])\r\n            } else if(event instanceof HttpResponse && request.method==='DELETE' && request.url.indexOf('user') !== -1){\r\n              this.toastr.success('User baned successfully!');\r\n            } else if(event instanceof HttpResponse && request.url.indexOf('_logout')!== -1){\r\n              sessionStorage.clear()\r\n              this.toastr.success('Logout successful!');\r\n              this.router.navigate(['/signin'])\r\n            }\r\n        }\r\n          \r\n        )\r\n      );\r\n  }\r\n\r\n  \r\n}","export class BrokerModel {\r\n    constructor(\r\n      public name : string,\r\n      public age : number,\r\n      public description : string,\r\n      public imageUrl : string\r\n    ) { }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'yesorno'\n})\nexport class YesornoPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if(value){\n      return 'yes'\n    }\n    else{\n      return 'no'\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SignInModel } from '../models/SignInModel';\r\nimport { SignUpModel } from '../models/SignUpModel';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n\r\nconst appKey = \"kid_rk6IN3LUm\"\r\nconst appSecret = \"e1d95d34d9294f1085042343ebda7dc9\"\r\nconst kinveyBaseUrl = \"https://baas.kinvey.com/\";\r\n\r\nconst loginUrl = kinveyBaseUrl+'user'+\"/\"+appKey+'/login';\r\nconst logoutUrl = kinveyBaseUrl+'user'+\"/\"+appKey+'/_logout';\r\nconst registerUrl = kinveyBaseUrl+'user'+\"/\"+appKey;\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(private http : HttpClient, private router : Router) {  }\r\n\r\n  login(body) {\r\n    return this.http.post<SignInModel>(loginUrl, body);\r\n  }\r\n\r\n  register(body) {\r\n    return this.http.post<SignUpModel>(registerUrl, body);\r\n  }\r\n\r\n  logout(){\r\n    return this.http.post(logoutUrl, '');\r\n  }\r\n\r\n  isLogged(){\r\n    if(sessionStorage.getItem('username')){\r\n      return true\r\n    }else{\r\n      return false\r\n    }\r\n  }\r\n\r\n  isAdmin(){\r\n    if(sessionStorage.getItem('username')===\"admin\"){\r\n      return true\r\n    }else{\r\n      return false\r\n    }\r\n  }\r\n\r\n  getUsername(){\r\n    return sessionStorage.getItem('username')\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BrokerModel } from '../models/BrokerModel';\r\n\r\nconst appKey = \"kid_rk6IN3LUm\"\r\nconst appSecret = \"e1d95d34d9294f1085042343ebda7dc9\"\r\nconst kinveyBaseUrl = \"https://baas.kinvey.com/\";\r\n\r\nconst getAllUrl = kinveyBaseUrl+'appdata'+\"/\"+appKey+'/brokers';\r\n\r\n\r\n@Injectable()\r\nexport class BrokerService {\r\n  constructor(private http : HttpClient) {  }\r\n\r\n  getAll() {\r\n    return this.http.get<Array<BrokerModel>>(getAllUrl);\r\n  }\r\n\r\n  create(body: BrokerModel) {\r\n    return this.http.post<BrokerModel>(getAllUrl,body)\r\n  }\r\n\r\n  getById(id: string) {\r\n    return this.http.get<BrokerModel>(getAllUrl+'/'+id);\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FlatModel } from '../models/FlatModel';\r\n\r\nconst appKey = \"kid_rk6IN3LUm\"\r\nconst appSecret = \"e1d95d34d9294f1085042343ebda7dc9\"\r\nconst kinveyBaseUrl = \"https://baas.kinvey.com/\";\r\n\r\nconst getAllUrl = kinveyBaseUrl+'appdata'+\"/\"+appKey+'/flats';\r\n\r\n\r\n@Injectable()\r\nexport class FlatService {\r\n  constructor(private http : HttpClient) {  }\r\n\r\n  getAll() {\r\n    return this.http.get<Array<FlatModel>>(getAllUrl);\r\n  }\r\n\r\n  create(body) {\r\n    return this.http.post<FlatModel>(getAllUrl,body)\r\n  }\r\n\r\n  delete(id) {\r\n    return this.http.delete(getAllUrl+'/'+id)\r\n  }\r\n\r\n  getById(id){\r\n    return this.http.get<FlatModel>(getAllUrl+'/'+id)\r\n  }\r\n\r\n  edit(id,body){\r\n    return this.http.put<FlatModel>(getAllUrl+'/'+id, body)\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst appKey = \"kid_rk6IN3LUm\"\r\nconst appSecret = \"e1d95d34d9294f1085042343ebda7dc9\"\r\nconst kinveyBaseUrl = \"https://baas.kinvey.com/\";\r\n\r\nconst getAllUrl = kinveyBaseUrl+'user'+\"/\"+appKey;\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(private http : HttpClient) {  }\r\n\r\n  getAll() {\r\n    return this.http.get(getAllUrl);\r\n  }\r\n\r\n  remove(id){\r\n    return this.http.delete(getAllUrl+'/'+id+'?hard=true')\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}